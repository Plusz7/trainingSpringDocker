# DataSource settings: set here your own configurations for the database
# connection. In this example we have "netgloo_blog" as database name and
# "root" as username and password.
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver

spring.datasource.url = jdbc:mysql://demo_sad_lily_1:3306/trainingDB?autoReconnect=true&useSSL=false
spring.datasource.username = user
spring.datasource.password = user

spring.jpa.properties.connection.characterEncoding=utf8
spring.jpa.properties.connection.CharSet=utf8
spring.mvc.view.prefix = /WEB-INF/jsp/
spring.mvc.view.suffix = .jsp

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update

logging.level.org.hibernate.SQL= DEBUG
logging.level.org.hibernate.type=TRACE

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57InnoDBDialect
spring.jpa.hibernate.use-new-id-generator-mappings=true


server.port=8080